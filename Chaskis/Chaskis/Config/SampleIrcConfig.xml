<?xml version="1.0" encoding="utf-8"?>
<!--

Sample Bot Config.  This tells Chaskis where to connect to,
ane which channel to watch.

Notice the password in this field.  Don't be dumb and commit this file to a senstive area.
Copy/Paste this elsewhere if needed. Chaskis has command line arguments you can use to point
to that pasted file instead of having to use the one located in ApplicationData

The server and at least one channel are required.
No field can be an empty string (except for optional fields).  Port can not be negative.
Password is optional.  quitmesssage is optional.

Admins are optional.
These are people who can do "advanced" stuff in the bot such as deleting stuff from plugins.
**IT IS UP TO A PLUGIN TO ENFORCE THIS**  Plugins can ignore this option if they so choose.
The value passed in is the IRC user name.
Note that casing is ignored.  The config gets read in and set to lowercase.

Bridge bots, meanwhile, are IRC bots that bridge other services such as telegram or slack.
Typically in a channel, bridge bots like this:

<telegrambot> telegramUser: Hello IRC channel!
<ircUser> Hello telegramUser!

If the channel has bridge bots that you want Chaskis to interact with, you'll need to configure
those in the commented out <bridgebots> tags.  The botname is the bridge bot's nick name in the channel.   Regexes are allowed
in the bot name in case the bot disconnects and rejoins and gets a number appended to it for some reason.
The bot regex, meanwhile, is the pattern the bridge bot will print when a user on the service is bridges
says something.  For example, in the above example, telegrambot will print out "userName: message" when
a user in the bridged service says something. So the regex you'll have to give it is
(?<bridgeUser>\w+):\s+(?<bridgeMessage>.+).  You MUST specify these two groups (bridgeUser and bridgeMessage)
somewhere inside the botregex for the thing to work.  The bridge user is the username of the person on the
bridge.  The bridgeMessage is the message they sent.  Chaskis, under the hood, will treat the bridgeUser
as the nick and the bridgeMessage as the message when processing privmsg events.  Note, if the regex fails
to match Chaskis will treat the bridge bot as a regular user.

-->
<ircbotconfig xmlns="https://files.shendrick.net/projects/chaskis/schemas/chaskisircconfig/2017/chaskisircconfig.xsd">
	<server>irc.testdomain.com</server>
    <channels>
	    <channel>#testchannel</channel>
        <channel>#testchannel2</channel>
    </channels>
	<port>6667</port>
	<username>testbot</username>
	<nick>testbot</nick>
	<realname>test bot</realname>
	<password>apassword</password>
    <quitmessage>I am being shut down!</quitmessage>
    <admins>
        <admin>person1</admin>
        <admin>person2</admin>
    </admins>

    <!--
    <bridgebots>
        <bridgebot>
            <botname>telegrambot\d*</botname>
            <botregex><![CDATA[^(?<bridgeUser>\w+):\s+(?<bridgeMessage>.+)]]></botregex>
        </bridgebot>
        <bridgebot>
            <botname>slackbot</botname>
            <botregex><![CDATA[^(?<bridgeUser>\w+):\s+(?<bridgeMessage>.+)]]></botregex>
        </bridgebot>
    </bridgebots>
    -->
</ircbotconfig>